{"ast":null,"code":"(function () {\n  var YAMLError,\n    nodes,\n    extend = function (child, parent) {\n      for (var key in parent) {\n        if (hasProp.call(parent, key)) child[key] = parent[key];\n      }\n      function ctor() {\n        this.constructor = child;\n      }\n      ctor.prototype = parent.prototype;\n      child.prototype = new ctor();\n      child.__super__ = parent.prototype;\n      return child;\n    },\n    hasProp = {}.hasOwnProperty;\n  nodes = require('./nodes');\n  YAMLError = require('./errors').YAMLError;\n  this.RepresenterError = function (superClass) {\n    extend(RepresenterError, superClass);\n    function RepresenterError() {\n      return RepresenterError.__super__.constructor.apply(this, arguments);\n    }\n    return RepresenterError;\n  }(YAMLError);\n  this.BaseRepresenter = function () {\n    BaseRepresenter.prototype.yaml_representers_types = [];\n    BaseRepresenter.prototype.yaml_representers_handlers = [];\n    BaseRepresenter.prototype.yaml_multi_representers_types = [];\n    BaseRepresenter.prototype.yaml_multi_representers_handlers = [];\n    BaseRepresenter.add_representer = function (data_type, handler) {\n      if (!this.prototype.hasOwnProperty('yaml_representers_types')) {\n        this.prototype.yaml_representers_types = [].concat(this.prototype.yaml_representers_types);\n      }\n      if (!this.prototype.hasOwnProperty('yaml_representers_handlers')) {\n        this.prototype.yaml_representers_handlers = [].concat(this.prototype.yaml_representers_handlers);\n      }\n      this.prototype.yaml_representers_types.push(data_type);\n      return this.prototype.yaml_representers_handlers.push(handler);\n    };\n    BaseRepresenter.add_multi_representer = function (data_type, handler) {\n      if (!this.prototype.hasOwnProperty('yaml_multi_representers_types')) {\n        this.prototype.yaml_multi_representers_types = [].concat(this.prototype.yaml_multi_representers_types);\n      }\n      if (!this.prototype.hasOwnProperty('yaml_multi_representers_handlers')) {\n        this.prototype.yaml_multi_representers_handlers = [].concat(this.prototype.yaml_multi_representers_handlers);\n      }\n      this.prototype.yaml_multi_representers_types.push(data_type);\n      return this.prototype.yaml_multi_representers_handlers.push(handler);\n    };\n    function BaseRepresenter(arg) {\n      var ref;\n      ref = arg != null ? arg : {}, this.default_style = ref.default_style, this.default_flow_style = ref.default_flow_style;\n      this.represented_objects = {};\n      this.object_keeper = [];\n      this.alias_key = null;\n    }\n    BaseRepresenter.prototype.represent = function (data) {\n      var node;\n      node = this.represent_data(data);\n      this.serialize(node);\n      this.represented_objects = {};\n      this.object_keeper = [];\n      return this.alias_key = null;\n    };\n    BaseRepresenter.prototype.represent_data = function (data) {\n      var data_type, i, j, len, ref, representer, type;\n      if (this.ignore_aliases(data)) {\n        this.alias_key = null;\n      } else if ((i = this.object_keeper.indexOf(data)) !== -1) {\n        this.alias_key = i;\n        if (this.alias_key in this.represented_objects) {\n          return this.represented_objects[this.alias_key];\n        }\n      } else {\n        this.alias_key = this.object_keeper.length;\n        this.object_keeper.push(data);\n      }\n      representer = null;\n      data_type = data === null ? 'null' : typeof data;\n      if (data_type === 'object') {\n        data_type = data.constructor;\n      }\n      if ((i = this.yaml_representers_types.lastIndexOf(data_type)) !== -1) {\n        representer = this.yaml_representers_handlers[i];\n      }\n      if (representer == null) {\n        ref = this.yaml_multi_representers_types;\n        for (i = j = 0, len = ref.length; j < len; i = ++j) {\n          type = ref[i];\n          if (!(data instanceof type)) {\n            continue;\n          }\n          representer = this.yaml_multi_representers_handlers[i];\n          break;\n        }\n      }\n      if (representer == null) {\n        if ((i = this.yaml_multi_representers_types.lastIndexOf(void 0)) !== -1) {\n          representer = this.yaml_multi_representers_handlers[i];\n        } else if ((i = this.yaml_representers_types.lastIndexOf(void 0)) !== -1) {\n          representer = this.yaml_representers_handlers[i];\n        }\n      }\n      if (representer != null) {\n        return representer.call(this, data);\n      } else {\n        return new nodes.ScalarNode(null, \"\" + data);\n      }\n    };\n    BaseRepresenter.prototype.represent_scalar = function (tag, value, style) {\n      var node;\n      if (style == null) {\n        style = this.default_style;\n      }\n      node = new nodes.ScalarNode(tag, value, null, null, style);\n      if (this.alias_key != null) {\n        this.represented_objects[this.alias_key] = node;\n      }\n      return node;\n    };\n    BaseRepresenter.prototype.represent_sequence = function (tag, sequence, flow_style) {\n      var best_style, item, j, len, node, node_item, ref, value;\n      value = [];\n      node = new nodes.SequenceNode(tag, value, null, null, flow_style);\n      if (this.alias_key != null) {\n        this.represented_objects[this.alias_key] = node;\n      }\n      best_style = true;\n      for (j = 0, len = sequence.length; j < len; j++) {\n        item = sequence[j];\n        node_item = this.represent_data(item);\n        if (!(node_item instanceof nodes.ScalarNode || node_item.style)) {\n          best_style = false;\n        }\n        value.push(node_item);\n      }\n      if (flow_style == null) {\n        node.flow_style = (ref = this.default_flow_style) != null ? ref : best_style;\n      }\n      return node;\n    };\n    BaseRepresenter.prototype.represent_mapping = function (tag, mapping, flow_style) {\n      var best_style, item_key, item_value, node, node_key, node_value, ref, value;\n      value = [];\n      node = new nodes.MappingNode(tag, value, flow_style);\n      if (this.alias_key) {\n        this.represented_objects[this.alias_key] = node;\n      }\n      best_style = true;\n      for (item_key in mapping) {\n        if (!hasProp.call(mapping, item_key)) continue;\n        item_value = mapping[item_key];\n        node_key = this.represent_data(item_key);\n        node_value = this.represent_data(item_value);\n        if (!(node_key instanceof nodes.ScalarNode || node_key.style)) {\n          best_style = false;\n        }\n        if (!(node_value instanceof nodes.ScalarNode || node_value.style)) {\n          best_style = false;\n        }\n        value.push([node_key, node_value]);\n      }\n      if (!flow_style) {\n        node.flow_style = (ref = this.default_flow_style) != null ? ref : best_style;\n      }\n      return node;\n    };\n    BaseRepresenter.prototype.ignore_aliases = function (data) {\n      return false;\n    };\n    return BaseRepresenter;\n  }();\n  this.Representer = function (superClass) {\n    extend(Representer, superClass);\n    function Representer() {\n      return Representer.__super__.constructor.apply(this, arguments);\n    }\n    Representer.prototype.represent_boolean = function (data) {\n      return this.represent_scalar('tag:yaml.org,2002:bool', data ? 'true' : 'false');\n    };\n    Representer.prototype.represent_null = function (data) {\n      return this.represent_scalar('tag:yaml.org,2002:null', 'null');\n    };\n    Representer.prototype.represent_number = function (data) {\n      var tag, value;\n      tag = \"tag:yaml.org,2002:\" + (data % 1 === 0 ? 'int' : 'float');\n      value = data !== data ? '.nan' : data === 2e308 ? '.inf' : data === -2e308 ? '-.inf' : data.toString();\n      return this.represent_scalar(tag, value);\n    };\n    Representer.prototype.represent_string = function (data) {\n      return this.represent_scalar('tag:yaml.org,2002:str', data);\n    };\n    Representer.prototype.represent_array = function (data) {\n      return this.represent_sequence('tag:yaml.org,2002:seq', data);\n    };\n    Representer.prototype.represent_date = function (data) {\n      return this.represent_scalar('tag:yaml.org,2002:timestamp', data.toISOString());\n    };\n    Representer.prototype.represent_object = function (data) {\n      return this.represent_mapping('tag:yaml.org,2002:map', data);\n    };\n    Representer.prototype.represent_undefined = function (data) {\n      throw new exports.RepresenterError(\"cannot represent an onbject: \" + data);\n    };\n    Representer.prototype.ignore_aliases = function (data) {\n      var ref;\n      if (data == null) {\n        return true;\n      }\n      if ((ref = typeof data) === 'boolean' || ref === 'number' || ref === 'string') {\n        return true;\n      }\n      return false;\n    };\n    return Representer;\n  }(this.BaseRepresenter);\n  this.Representer.add_representer('boolean', this.Representer.prototype.represent_boolean);\n  this.Representer.add_representer('null', this.Representer.prototype.represent_null);\n  this.Representer.add_representer('number', this.Representer.prototype.represent_number);\n  this.Representer.add_representer('string', this.Representer.prototype.represent_string);\n  this.Representer.add_representer(Array, this.Representer.prototype.represent_array);\n  this.Representer.add_representer(Date, this.Representer.prototype.represent_date);\n  this.Representer.add_representer(Object, this.Representer.prototype.represent_object);\n  this.Representer.add_representer(null, this.Representer.prototype.represent_undefined);\n}).call(this);","map":null,"metadata":{},"sourceType":"script"}