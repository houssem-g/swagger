{"ast":null,"code":"(function () {\n  var extend = function (child, parent) {\n      for (var key in parent) {\n        if (hasProp.call(parent, key)) child[key] = parent[key];\n      }\n      function ctor() {\n        this.constructor = child;\n      }\n      ctor.prototype = parent.prototype;\n      child.prototype = new ctor();\n      child.__super__ = parent.prototype;\n      return child;\n    },\n    hasProp = {}.hasOwnProperty;\n  this.Token = function () {\n    function Token(start_mark, end_mark) {\n      this.start_mark = start_mark;\n      this.end_mark = end_mark;\n    }\n    return Token;\n  }();\n  this.DirectiveToken = function (superClass) {\n    extend(DirectiveToken, superClass);\n    DirectiveToken.prototype.id = '<directive>';\n    function DirectiveToken(name, value, start_mark, end_mark) {\n      this.name = name;\n      this.value = value;\n      this.start_mark = start_mark;\n      this.end_mark = end_mark;\n    }\n    return DirectiveToken;\n  }(this.Token);\n  this.DocumentStartToken = function (superClass) {\n    extend(DocumentStartToken, superClass);\n    function DocumentStartToken() {\n      return DocumentStartToken.__super__.constructor.apply(this, arguments);\n    }\n    DocumentStartToken.prototype.id = '<document start>';\n    return DocumentStartToken;\n  }(this.Token);\n  this.DocumentEndToken = function (superClass) {\n    extend(DocumentEndToken, superClass);\n    function DocumentEndToken() {\n      return DocumentEndToken.__super__.constructor.apply(this, arguments);\n    }\n    DocumentEndToken.prototype.id = '<document end>';\n    return DocumentEndToken;\n  }(this.Token);\n  this.StreamStartToken = function (superClass) {\n    extend(StreamStartToken, superClass);\n    StreamStartToken.prototype.id = '<stream start>';\n    function StreamStartToken(start_mark, end_mark, encoding) {\n      this.start_mark = start_mark;\n      this.end_mark = end_mark;\n      this.encoding = encoding;\n    }\n    return StreamStartToken;\n  }(this.Token);\n  this.StreamEndToken = function (superClass) {\n    extend(StreamEndToken, superClass);\n    function StreamEndToken() {\n      return StreamEndToken.__super__.constructor.apply(this, arguments);\n    }\n    StreamEndToken.prototype.id = '<stream end>';\n    return StreamEndToken;\n  }(this.Token);\n  this.BlockSequenceStartToken = function (superClass) {\n    extend(BlockSequenceStartToken, superClass);\n    function BlockSequenceStartToken() {\n      return BlockSequenceStartToken.__super__.constructor.apply(this, arguments);\n    }\n    BlockSequenceStartToken.prototype.id = '<block sequence start>';\n    return BlockSequenceStartToken;\n  }(this.Token);\n  this.BlockMappingStartToken = function (superClass) {\n    extend(BlockMappingStartToken, superClass);\n    function BlockMappingStartToken() {\n      return BlockMappingStartToken.__super__.constructor.apply(this, arguments);\n    }\n    BlockMappingStartToken.prototype.id = '<block mapping end>';\n    return BlockMappingStartToken;\n  }(this.Token);\n  this.BlockEndToken = function (superClass) {\n    extend(BlockEndToken, superClass);\n    function BlockEndToken() {\n      return BlockEndToken.__super__.constructor.apply(this, arguments);\n    }\n    BlockEndToken.prototype.id = '<block end>';\n    return BlockEndToken;\n  }(this.Token);\n  this.FlowSequenceStartToken = function (superClass) {\n    extend(FlowSequenceStartToken, superClass);\n    function FlowSequenceStartToken() {\n      return FlowSequenceStartToken.__super__.constructor.apply(this, arguments);\n    }\n    FlowSequenceStartToken.prototype.id = '[';\n    return FlowSequenceStartToken;\n  }(this.Token);\n  this.FlowMappingStartToken = function (superClass) {\n    extend(FlowMappingStartToken, superClass);\n    function FlowMappingStartToken() {\n      return FlowMappingStartToken.__super__.constructor.apply(this, arguments);\n    }\n    FlowMappingStartToken.prototype.id = '{';\n    return FlowMappingStartToken;\n  }(this.Token);\n  this.FlowSequenceEndToken = function (superClass) {\n    extend(FlowSequenceEndToken, superClass);\n    function FlowSequenceEndToken() {\n      return FlowSequenceEndToken.__super__.constructor.apply(this, arguments);\n    }\n    FlowSequenceEndToken.prototype.id = ']';\n    return FlowSequenceEndToken;\n  }(this.Token);\n  this.FlowMappingEndToken = function (superClass) {\n    extend(FlowMappingEndToken, superClass);\n    function FlowMappingEndToken() {\n      return FlowMappingEndToken.__super__.constructor.apply(this, arguments);\n    }\n    FlowMappingEndToken.prototype.id = '}';\n    return FlowMappingEndToken;\n  }(this.Token);\n  this.KeyToken = function (superClass) {\n    extend(KeyToken, superClass);\n    function KeyToken() {\n      return KeyToken.__super__.constructor.apply(this, arguments);\n    }\n    KeyToken.prototype.id = '?';\n    return KeyToken;\n  }(this.Token);\n  this.ValueToken = function (superClass) {\n    extend(ValueToken, superClass);\n    function ValueToken() {\n      return ValueToken.__super__.constructor.apply(this, arguments);\n    }\n    ValueToken.prototype.id = ':';\n    return ValueToken;\n  }(this.Token);\n  this.BlockEntryToken = function (superClass) {\n    extend(BlockEntryToken, superClass);\n    function BlockEntryToken() {\n      return BlockEntryToken.__super__.constructor.apply(this, arguments);\n    }\n    BlockEntryToken.prototype.id = '-';\n    return BlockEntryToken;\n  }(this.Token);\n  this.FlowEntryToken = function (superClass) {\n    extend(FlowEntryToken, superClass);\n    function FlowEntryToken() {\n      return FlowEntryToken.__super__.constructor.apply(this, arguments);\n    }\n    FlowEntryToken.prototype.id = ',';\n    return FlowEntryToken;\n  }(this.Token);\n  this.AliasToken = function (superClass) {\n    extend(AliasToken, superClass);\n    AliasToken.prototype.id = '<alias>';\n    function AliasToken(value, start_mark, end_mark) {\n      this.value = value;\n      this.start_mark = start_mark;\n      this.end_mark = end_mark;\n    }\n    return AliasToken;\n  }(this.Token);\n  this.AnchorToken = function (superClass) {\n    extend(AnchorToken, superClass);\n    AnchorToken.prototype.id = '<anchor>';\n    function AnchorToken(value, start_mark, end_mark) {\n      this.value = value;\n      this.start_mark = start_mark;\n      this.end_mark = end_mark;\n    }\n    return AnchorToken;\n  }(this.Token);\n  this.TagToken = function (superClass) {\n    extend(TagToken, superClass);\n    TagToken.prototype.id = '<tag>';\n    function TagToken(value, start_mark, end_mark) {\n      this.value = value;\n      this.start_mark = start_mark;\n      this.end_mark = end_mark;\n    }\n    return TagToken;\n  }(this.Token);\n  this.ScalarToken = function (superClass) {\n    extend(ScalarToken, superClass);\n    ScalarToken.prototype.id = '<scalar>';\n    function ScalarToken(value, plain, start_mark, end_mark, style) {\n      this.value = value;\n      this.plain = plain;\n      this.start_mark = start_mark;\n      this.end_mark = end_mark;\n      this.style = style;\n    }\n    return ScalarToken;\n  }(this.Token);\n}).call(this);","map":null,"metadata":{},"sourceType":"script"}